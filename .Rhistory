install.packages("magrittr")
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
install.packages("caesar")
library(caesar)
# read the text file
usa_txt <- readLines("../data/usa.txt")
# split words up into characters and do a count
usa_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
# read the text file
usa_txt <- readLines("../data/wordlist.10000.txt")
rm(usa_txt)
# read the text file
english_txt <- readLines("../data/wordlist.10000.txt")
# split words up into characters and do a count
english_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
rm(english_txt)
# read the text file
dictionary_txt <- readLines("../data/wordlist.10000.txt")
# split words up into characters and do a count
dictionary_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
# split words up into characters and do a count
dictionary_counts <- dictionary_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
dictionary_counts_df <- data.frame(char = names(char_counts), count = as.numeric(char_counts), stringsAsFactors=FALSE)
dictionary_counts_df <- data.frame(letter = names(dictionary_counts), count = as.numeric(dictionary_counts), stringsAsFactors=FALSE)
View(dictionary_counts_df)
dictionary_counts_df %>% arrange(count)
library(data.table)
library(datatable)
library(data.table)
install.packages("data.table")
dictionary_counts_df[order(count), ]
View(dictionary_counts_df)
attach(mtcars)
mtcars
x <- dictionary_counts_df[order(count), ]
str(dictionary_counts_df)
mtcars[order(mpg),]
str(mtcars)
dictionary_counts_df[order(letter), ]
dictionary_counts_df[1, ]
dictionary_counts_df[order(count), ]
dictionary_counts_df <- data.frame(test = names(dictionary_counts), test2 = as.numeric(dictionary_counts), stringsAsFactors=FALSE)
dictionary_counts_df[order(test), ]
dictionary_counts_df <- data.frame(letter = names(dictionary_counts), count = as.numeric(dictionary_counts), stringsAsFactors=FALSE)
dictionary_counts_df[order(letter), ]
colnames(dictionary_counts_df)
?order
x <- dictionary_counts[,1]
library(data.table)
dictionary_counts_dt <- data.table(letter = names(dictionary_counts), count = as.numeric(dictionary_counts), stringsAsFactors=FALSE)
dictionary_counts_dt[, order(count)]
dictionary_counts_dt[order(count)]
dictionary_counts_dt[order(-count)]
dictionary_counts_dt <- dictionary_counts_dt[order(-count)]
rm(dictionary_counts_df)
View(dictionary_counts_dt)
head(counts_df)
dictionary_counts_dt
barplot(dictionary_counts_dt)
library(ggplot)
library(ggplot2)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(magrittr)
library(caesar)
library(ggplot2)
# read the text file
dictionary_txt <- readLines("../data/wordlist.10000.txt")
# split words up into characters and do a count
dictionary_counts <- dictionary_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
dictionary_counts_dt <- data.table(letter = names(dictionary_counts), count = as.numeric(dictionary_counts), stringsAsFactors=FALSE)
dictionary_counts_dt <- dictionary_counts_dt[order(-count)]
dictionary_counts_dt
ggplot(dictionary_counts_dt, aes(x=weight)) +
geom_histogram(color="black", fill="white")
ggplot(dictionary_counts_dt, aes(x=letter)) +
geom_histogram(color="black", fill="white")
ggplot(dictionary_counts_dt, aes(x=letter)) +
geom_histogram(color="black", fill="white", position="identity")
ggplot(data = dictionary_counts_dt, aes(x = letter, y = count)) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
ggplot(data = dictionary_counts_dt, aes(x = letter, y = count)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
theme_bw()
# read the text file
english_txt_usage <- fread("../data/cornell_math.csv")
View(english_txt_usage)
View(dictionary_counts_dt)
View(english_txt_usage)
# plot bar graph for text usage frequency
ggplot(data = english_txt_usage, aes(x = Letter, y = Count)) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
english_txt_usage
cipher_txt <- data.table("Max wxybgbmbhg hy ubhbgyhkftmbvl bl vnkkxgmer vhgmkhoxklbte, unm ubhbgyhkftmbvl vtg ux ehhlxer wxybgxw tl max nlx hy vhfinmxkl tgw vhfinmxk lvbxgvx mh lmnwr ubhehzbvte jnxlmbhgl. Bm yhkfl max bgmxklxvmbhg uxmpxxg fhexvnetk ubhehzr (tgw kxetmxw ubhehzbvte wblvbiebgxl) tgw vhfinmbgz lvbxgvx. Mabl bgmxkwblvbiebgtkr ybxew bgoheoxl kxlxtkvaxkl pah phkd tm ftgr wbyyxkxgm ihbgml hg max vhfinmxk lvbxgvx-ubhehzr lixvmknf: Ykhf mahlx pah tkx wxoxehibgz gxp kxexotgm tezhkbmafl, mh mahlx pah tkx wxoxehibgz tgw nlbgz vhfinmtmbhgte tiiebvtmbhgl mh lmnwr ubhehzbvte iaxghfxgt, ztbg gxp bglbzam bgmh max ebyx lvbxgvxl, bwxgmbyr gxp wknz mtkzxml xmv. Mabl ybxew bl vnkkxgmer xoheobgz, unm hgx ihbgm bl tzkxxw nihg: Ubhbgyhkftmbvl bl t uehllhfbgz ybxew pbmabg pabva maxkx kxftbg ftgr lbzgbybvtgm wblvhoxkbxl mh ux ftwx.")
View(cipher_txt)
# split words up into characters and do a count
cipher_txt_counts <- cipher_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
cipher_txt_counts_dt <- data.table(letter = names(cipher_txt_counts), count = as.numeric(cipher_txt_counts), stringsAsFactors=FALSE)
cipher_txt_counts_dt <- cipher_txt_counts_dt[order(-count)]
cipher_txt_counts_dt
lowercase
cipher_txt <- data.table(tolower("Max wxybgbmbhg hy ubhbgyhkftmbvl bl vnkkxgmer vhgmkhoxklbte, unm ubhbgyhkftmbvl vtg ux ehhlxer wxybgxw tl max nlx hy vhfinmxkl tgw vhfinmxk lvbxgvx mh lmnwr ubhehzbvte jnxlmbhgl. Bm yhkfl max bgmxklxvmbhg uxmpxxg fhexvnetk ubhehzr (tgw kxetmxw ubhehzbvte wblvbiebgxl) tgw vhfinmbgz lvbxgvx. Mabl bgmxkwblvbiebgtkr ybxew bgoheoxl kxlxtkvaxkl pah phkd tm ftgr wbyyxkxgm ihbgml hg max vhfinmxk lvbxgvx-ubhehzr lixvmknf: Ykhf mahlx pah tkx wxoxehibgz gxp kxexotgm tezhkbmafl, mh mahlx pah tkx wxoxehibgz tgw nlbgz vhfinmtmbhgte tiiebvtmbhgl mh lmnwr ubhehzbvte iaxghfxgt, ztbg gxp bglbzam bgmh max ebyx lvbxgvxl, bwxgmbyr gxp wknz mtkzxml xmv. Mabl ybxew bl vnkkxgmer xoheobgz, unm hgx ihbgm bl tzkxxw nihg: Ubhbgyhkftmbvl bl t uehllhfbgz ybxew pbmabg pabva maxkx kxftbg ftgr lbzgbybvtgm wblvhoxkbxl mh ux ftwx."))
# split words up into characters and do a count
cipher_txt_counts <- cipher_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
cipher_txt_counts_dt <- data.table(letter = names(cipher_txt_counts), count = as.numeric(cipher_txt_counts), stringsAsFactors=FALSE)
cipher_txt_counts_dt <- cipher_txt_counts_dt[order(-count)]
cipher_txt_counts_dt
cipher_txt <- data.table("Max wxybgbmbhg hy ubhbgyhkftmbvl bl vnkkxgmer vhgmkhoxklbte, unm ubhbgyhkftmbvl vtg ux ehhlxer wxybgxw tl max nlx hy vhfinmxkl tgw vhfinmxk lvbxgvx mh lmnwr ubhehzbvte jnxlmbhgl. Bm yhkfl max bgmxklxvmbhg uxmpxxg fhexvnetk ubhehzr (tgw kxetmxw ubhehzbvte wblvbiebgxl) tgw vhfinmbgz lvbxgvx. Mabl bgmxkwblvbiebgtkr ybxew bgoheoxl kxlxtkvaxkl pah phkd tm ftgr wbyyxkxgm ihbgml hg max vhfinmxk lvbxgvx-ubhehzr lixvmknf: Ykhf mahlx pah tkx wxoxehibgz gxp kxexotgm tezhkbmafl, mh mahlx pah tkx wxoxehibgz tgw nlbgz vhfinmtmbhgte tiiebvtmbhgl mh lmnwr ubhehzbvte iaxghfxgt, ztbg gxp bglbzam bgmh max ebyx lvbxgvxl, bwxgmbyr gxp wknz mtkzxml xmv. Mabl ybxew bl vnkkxgmer xoheobgz, unm hgx ihbgm bl tzkxxw nihg: Ubhbgyhkftmbvl bl t uehllhfbgz ybxew pbmabg pabva maxkx kxftbg ftgr lbzgbybvtgm wblvhoxkbxl mh ux ftwx.")
# split words up into characters and do a count
cipher_txt_counts <- cipher_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
cipher_txt_counts_dt <- data.table(letter = names(cipher_txt_counts), count = as.numeric(cipher_txt_counts), stringsAsFactors=FALSE)
cipher_txt_counts_dt <- cipher_txt_counts_dt[order(-count)]
cipher_txt_counts_dt
cipher_txt <- data.table(tolower("Max wxybgbmbhg hy ubhbgyhkftmbvl bl vnkkxgmer vhgmkhoxklbte, unm ubhbgyhkftmbvl vtg ux ehhlxer wxybgxw tl max nlx hy vhfinmxkl tgw vhfinmxk lvbxgvx mh lmnwr ubhehzbvte jnxlmbhgl. Bm yhkfl max bgmxklxvmbhg uxmpxxg fhexvnetk ubhehzr (tgw kxetmxw ubhehzbvte wblvbiebgxl) tgw vhfinmbgz lvbxgvx. Mabl bgmxkwblvbiebgtkr ybxew bgoheoxl kxlxtkvaxkl pah phkd tm ftgr wbyyxkxgm ihbgml hg max vhfinmxk lvbxgvx-ubhehzr lixvmknf: Ykhf mahlx pah tkx wxoxehibgz gxp kxexotgm tezhkbmafl, mh mahlx pah tkx wxoxehibgz tgw nlbgz vhfinmtmbhgte tiiebvtmbhgl mh lmnwr ubhehzbvte iaxghfxgt, ztbg gxp bglbzam bgmh max ebyx lvbxgvxl, bwxgmbyr gxp wknz mtkzxml xmv. Mabl ybxew bl vnkkxgmer xoheobgz, unm hgx ihbgm bl tzkxxw nihg: Ubhbgyhkftmbvl bl t uehllhfbgz ybxew pbmabg pabva maxkx kxftbg ftgr lbzgbybvtgm wblvhoxkbxl mh ux ftwx."))
# split words up into characters and do a count
cipher_txt_counts <- cipher_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
cipher_txt_counts_dt <- data.table(letter = names(cipher_txt_counts), count = as.numeric(cipher_txt_counts), stringsAsFactors=FALSE)
cipher_txt_counts_dt <- cipher_txt_counts_dt[order(-count)]
cipher_txt_counts_dt
ggplot(data = cipher_txt_counts_dt, aes(x = letter, y = count)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
theme_bw()
?caesar
cipher_txt <- tolower("Max wxybgbmbhg hy ubhbgyhkftmbvl bl vnkkxgmer vhgmkhoxklbte, unm ubhbgyhkftmbvl vtg ux ehhlxer wxybgxw tl max nlx hy vhfinmxkl tgw vhfinmxk lvbxgvx mh lmnwr ubhehzbvte jnxlmbhgl. Bm yhkfl max bgmxklxvmbhg uxmpxxg fhexvnetk ubhehzr (tgw kxetmxw ubhehzbvte wblvbiebgxl) tgw vhfinmbgz lvbxgvx. Mabl bgmxkwblvbiebgtkr ybxew bgoheoxl kxlxtkvaxkl pah phkd tm ftgr wbyyxkxgm ihbgml hg max vhfinmxk lvbxgvx-ubhehzr lixvmknf: Ykhf mahlx pah tkx wxoxehibgz gxp kxexotgm tezhkbmafl, mh mahlx pah tkx wxoxehibgz tgw nlbgz vhfinmtmbhgte tiiebvtmbhgl mh lmnwr ubhehzbvte iaxghfxgt, ztbg gxp bglbzam bgmh max ebyx lvbxgvxl, bwxgmbyr gxp wknz mtkzxml xmv. Mabl ybxew bl vnkkxgmer xoheobgz, unm hgx ihbgm bl tzkxxw nihg: Ubhbgyhkftmbvl bl t uehllhfbgz ybxew pbmabg pabva maxkx kxftbg ftgr lbzgbybvtgm wblvhoxkbxl mh ux ftwx.")
# split words up into characters and do a count
cipher_txt_counts <- cipher_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
cipher_txt_counts_dt <- data.table(letter = names(cipher_txt_counts), count = as.numeric(cipher_txt_counts), stringsAsFactors=FALSE)
cipher_txt_counts_dt <- cipher_txt_counts_dt[order(-count)]
cipher_txt_counts_dt
ggplot(data = cipher_txt_counts_dt, aes(x = letter, y = count)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
theme_bw()
caesar(cipher_txt, shift = 23)
caesar(cipher_txt, shift = 19)
caesar(cipher_txt, shift = 23, decrypt = TRUE)
caesar(cipher_txt, shift = 19, decrypt = TRUE)
caesar(cipher_txt, decrypt = TRUE)
cipher_txt
caesar("max", shift = 19, decrypt = TRUE)
caesar("HAshulhqfhclvcwkhcwhdfkhucricdoocwklqjva", decrypt = TRUE)
caesar(",S1WKN9WRWKN9WQWL", shift = 40, decrypt = TRUE)
View(cipher_txt_counts_dt)
cipher_txt
caesar("max wxybgbmbhg", shift = -19, decrypt = TRUE)
caesar("max wxybgbmbhg", shift = -20, decrypt = TRUE)
caesar("max wxybgbmbhg", shift = -18, decrypt = TRUE)
caesar("max wxybgbmbhg", shift = -17, decrypt = TRUE)
caesar("max wxybgbmbhg", shift = -21, decrypt = TRUE)
caesar("max wxybgbmbhg", shift = -7, decrypt = TRUE)
25-19
26-19
caesar(cipher_txt, shift = -3, decrypt = TRUE)
caesar(cipher_txt, shift = -4, decrypt = TRUE)
caesar(cipher_txt, shift = -2, decrypt = TRUE)
caesar(cipher_txt, shift = -3, decrypt = TRUE)
caesar(cipher_txt, shift = -4, decrypt = TRUE)
caesar(cipher_txt, shift = -3, decrypt = TRUE)
caesar(cipher_txt, shift = -7, decrypt = TRUE)
cipher_txt
gsub(" ", "", cipher_txt)
clean_ciphertxt <- gsub(" ", "", cipher_txt)
clean_ciphertxt <- gsub(":|-|(|)", "", cipher_txt)
clean_ciphertxt <- gsub(" ", "", cipher_txt)
clean_ciphertxt <- gsub(":|-|(|)", "", clean_ciphertxt)
clean_ciphertxt
clean_ciphertxt <- gsub("[[:punct:]]", "", clean_ciphertxt)
clean_ciphertxt
caesar(cipher_txt, shift = -3, decrypt = TRUE)
caesar(cipher_txt, shift = -7, decrypt = TRUE)
caesar(clean_ciphertxtcipher_txt, shift = -3, decrypt = TRUE)
caesar(clean_ciphertxt, shift = -3, decrypt = TRUE)
caesar(clean_ciphertxt, shift = -7, decrypt = TRUE)
clean_ciphertxt <- gsub("[[:punct:]]", "", ciphertxt)
clean_ciphertxt <- gsub("[[:punct:]]", "", cipher_txt)
array <- strsplit(clean_ciphertxt, " ")
View(array)
View(array)
decrytp <- map(array, caesar(.x, shift = -3, decrypt = TRUE))
install.packages("purrr")
library(purrr)
decrytp <- map(array, caesar(.x, shift = -3, decrypt = TRUE))
decrytp <- map(array, caesar(.array, shift = -3, decrypt = TRUE))
decrytp <- map(array, ~ caesar(.x, shift = -3, decrypt = TRUE))
View(decrytp)
decrytp <- map(array, ~ caesar(.x, shift = -7, decrypt = TRUE))
View(decrytp)
decrypt <- map(array, ~ caesar(.x, shift = -7, decrypt = TRUE))
View(decrypt)
paste(decrypt, " ")
paste(unlist(decrypt), " ")
paste(decrypt, " ", collapse = '')
paste(unlist(decrypt), " ", collapse = '')
paste(unlist(decrypt), "", collapse = '')
tolower(paste(unlist(decrypt), "", collapse = ''))
decrypt <- map(array, ~ caesar(.x, shift = -7, decrypt = TRUE))
tolower(paste(unlist(decrypt), "", collapse = ''))
# decrypt
decrypt <- map(array, ~ caesar(.x, shift = -3, decrypt = TRUE))
tolower(paste(unlist(decrypt), "", collapse = ''))
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(magrittr)
library(caesar)
library(ggplot2)
library(purrr)
# read the text file
dictionary_txt <- readLines("../data/wordlist.10000.txt")
# split words up into characters and do a count
dictionary_counts <- dictionary_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
dictionary_counts_dt <- data.table(letter = names(dictionary_counts), count = as.numeric(dictionary_counts), stringsAsFactors=FALSE)
dictionary_counts_dt <- dictionary_counts_dt[order(-count)]
dictionary_counts_dt
ggplot(data = dictionary_counts_dt, aes(x = letter, y = count)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
theme_bw()
library(data.table)
library(data.table)
library(magrittr)
library(caesar)
library(ggplot2)
library(purrr)
# read the text file
dictionary_txt <- readLines("../data/wordlist.10000.txt")
# split words up into characters and do a count
dictionary_counts <- dictionary_txt %>%
paste(collapse="") %>%
strsplit(split="") %>% unlist %>%
`[`(!. %in% c("", " ", ".", ",")) %>%
table
dictionary_counts_dt <- data.table(letter = names(dictionary_counts), count = as.numeric(dictionary_counts), stringsAsFactors=FALSE)
dictionary_counts_dt <- dictionary_counts_dt[order(-count)]
dictionary_counts_dt
ggplot(data = dictionary_counts_dt, aes(x = letter, y = count)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
theme_bw()
# plot bar graph for text usage frequency
ggplot(data = english_txt_usage, aes(x = Letter, y = Count)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
theme_bw()
# read the text file
english_txt_usage <- fread("../data/cornell_math.csv")
english_txt_usage
# plot bar graph for text usage frequency
ggplot(data = english_txt_usage, aes(x = Letter, y = Count)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
theme_bw()
